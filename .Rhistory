library(blogdown)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
hugo_version()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
install.packages('blogdown')
library(blogdown)
install_hugo()
library(blogdown)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::serve_site()
blogdown:::serve_site()
install.packages("plotly")
library(plotly)
q()
blogdown::serve_site()
blogdown::serve_site()
us_cities = read.csv("https://raw.githubusercontent.com/plotly/datasets/master/us-cities-top-1k.csv")
View(us_cities)
conf_data = data.frame(City = c("Washington DC", "Bristol", "Charleston", "Edinburgh", "Paris"),
Conf = c("Modelling the World's Systems 2019", "MRF AMR Annual Conference 2019",
"EPIDEMICS 2019", "Microbiology Society Annual Conference 2020", "ECCMID 2020"),
Status = c("Attended", "Attended", "Will attend", "Will attend", "Will attend"),
lat = c(38.89511, 51.454514, 32.784618, 55.953251, 48.864716),
lon = c(-77.03637, -2.587910, -79.940918, -3.188267, 2.349014))
View(conf_data)
install.packages("openxlsx")
library(openxlsx)
write.xlsx(conf_data, "conf_data.xlsx")
conf_data = read.xlsx("qleclerc/conf_data.xlsx/")
conf_data = read.xlsx("conf_data.xlsx")
conf_data = read.xlsx("conf_data.xlsx")
rm(conf_data)
rm(us_cities)
conf_data = read.xlsx("conf_data.xlsx")
paste("Conf", "\n", "Hey")
paste("Conf", \n, "Hey")
paste("Conf", "\n", "\nHey")
cat("Conf", "Hey")
cat("Conf", "\n", "Hey")
cat("Conf", "\n Hey")
cat("Conf", "\nHey")
?cat
paste(cat("Conf", "\nHey"))
t = cat("Conf", "\nHey")
?paste
paste("Hey", "You", sep="\n")
paste("Hey", "You", collapse ="\n")
?cat
paste(strwrap("Hello", "Hi", collapase="\n"))
paste(strwrap("Hello", "Hi", collapse="\n"))
paste(strwrap("Hello", "Hi") collapse="\n")
paste(strwrap("Hello", "Hi"), collapse="\n")
rm(t)
?plot_ly
purple
rbg(50,0,50)
?rgb
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
?read.xlsx
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
bblogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
warnings()
plotlu
?api_create
api()
plotly::api()
plotly::api()
install.packages("plotly")
install.packages("plotly")
plotly::api()
help(signup, package = 'plotly')
help(".Rprofile")
Sys.getenv("R_USER")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
get_who_cases <- function(country = NULL, daily = FALSE) {
who_cases <- data.table::fread("https://raw.githubusercontent.com/eebrown/data2019nCoV/master/data-raw/WHO_SR.csv")
if (!is.null(country)) {
who_cases <- who_cases[, c("Date", country), with = FALSE]
colnames(who_cases) <- c("date", "cases")
}
if (daily) {
cols <- colnames(who_cases)
cols <- cols[!colnames(who_cases) %in% c("Date", "date", "SituationReport")]
who_cases <- who_cases[, (cols) := lapply(.SD, function(x) {c(x[1],diff(x))}),
.SDcols = cols]
}
return(who_cases)
}
get_who_cases()
get_who_cases("France")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
library(blogdown)
serve_site()
blogdown::serve_site()
library(plotly)
library(plotly)
library(openxlsx)
token <- "pk.eyJ1IjoicWxlY2xlcmMiLCJhIjoiY2sya2I4OHh3MWY3OTNnbnRyb2Rlems1ZiJ9.Vkoa91O2OR7hbt7rsT9kyA"    # You need your own token
Sys.setenv("plotly_username" = "qleclerc")
Sys.setenv("plotly_api_key" = "TQMKux7y6xg9XpyU4oWE")
conf_data = read.xlsx("conf_data.xlsx")
p <- conf_data %>%
plot_ly(
lat = ~lat,
lon = ~lon,
marker = list(size = 10),
color = ~Status,
colors = c("purple3", "royalblue3"),
type = 'scattermapbox',
hoverinfo = "text",
hovertext = paste(conf_data[,"City"], conf_data[,"Conf"], conf_data[,"Date"], sep="\n")) %>%
layout(
mapbox = list(
style = 'dark',
accesstoken = token,
zoom = 2,
center = list(lat = mean(conf_data$lat), lon = mean(conf_data$lon))),
legend = list(x = 100, y = 0.5,
font = list(
size = 14,
color = "#000"),
bgcolor = "#E2E2E2",
bordercolor = "#FFFFFF",
borderwidth = 2))
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = api_create(p, filename="dark-tile")
chart_link
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
library(plotly)
library(openxlsx)
token <- "pk.eyJ1IjoicWxlY2xlcmMiLCJhIjoiY2sya2I4OHh3MWY3OTNnbnRyb2Rlems1ZiJ9.Vkoa91O2OR7hbt7rsT9kyA"    # You need your own token
Sys.setenv("plotly_username" = "qleclerc")
Sys.setenv("plotly_api_key" = "TQMKux7y6xg9XpyU4oWE")
conf_data = read.xlsx("conf_data.xlsx")
p <- conf_data %>%
plot_ly(
lat = ~lat,
lon = ~lon,
marker = list(size = 10),
color = ~Status,
colors = c("purple3", "royalblue3"),
type = 'scattermapbox',
hoverinfo = "text",
hovertext = paste(conf_data[,"City"], conf_data[,"Conf"], conf_data[,"Date"], sep="\n")) %>%
layout(
mapbox = list(
style = 'dark',
accesstoken = token,
zoom = 1.5,
center = list(lat = mean(conf_data$lat), lon = mean(conf_data$lon))),
legend = list(x = 100, y = 0.5,
font = list(
size = 14,
color = "#000"),
bgcolor = "#E2E2E2",
bordercolor = "#FFFFFF",
borderwidth = 2))
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = api_create(p, filename="dark-tile")
chart_link
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
